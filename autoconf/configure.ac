#######################################################
#                                                     #
#               DO NOT EDIT THIS FILE                 #
#                                                     #
#  Use ocp-autoconf to generate this file from:       #
#   * ocp-autoconf.config for the OCaml part          #
#   * ocp-autoconf.ac for autoconf parts              #
#                                                     #
#######################################################
AC_INIT(ocplib-concur,0.1)
AC_COPYRIGHT(Copyright 2016 OCamlPro SAS)
OCAML_MINIMAL_VERSION=3.12.1
AC_CONFIG_MACRO_DIR([m4])

AC_ARG_ENABLE(version-check,
 [  --disable-version-check            do not check OCaml version],
 [VERSION_CHECK="$enableval"],
 [VERSION_CHECK="yes"])

AC_PROG_CC

AC_PROG_OCAML

AX_SPLIT_VERSION(OCAMLVERSION)
OCAML_MAJOR_VERSION=$AX_MAJOR_VERSION
OCAML_MINOR_VERSION=$AX_MINOR_VERSION
OCAML_POINT_VERSION=$AX_POINT_VERSION

if test "$OCAMLC" = "no"; then
   AC_MSG_ERROR([You must install the OCaml compiler])
fi

if test "$VERSION_CHECK" = "yes" ; then
  AX_COMPARE_VERSION( [$OCAMLVERSION], [lt], [${OCAML_MINIMAL_VERSION}],
  AC_MSG_ERROR([Your version of OCaml: $OCAMLVERSION is not supported. You need ${OCAML_MINIMAL_VERSION} at least.]))
fi

case "$OCAMLLIB" in
  */lib/ocaml)
        OCAMLBIN=`dirname $OCAMLLIB`
        OCAMLBIN=`dirname $OCAMLBIN`
        OCAMLBIN=$OCAMLBIN/bin
        ;;
  */lib)
        OCAMLBIN=`dirname $OCAMLLIB`
        OCAMLBIN=$OCAMLBIN/bin
        ;;
  *) OCAMLBIN=/usr/local/bin
  ;;
esac

ocamldir='${libdir}/ocaml'
metadir='${ocamldir}'

AC_PROG_FINDLIB
if test "${OCAMLFIND}" != "no"; then
  metadir="$(${OCAMLFIND} -printconf destdir)"
  echo "initializing metadir from ocamlfind config"
fi

if test "x${prefix}" = "xNONE"; then
  if test "x${OPAM_PREFIX}" != "x"; then
    echo inheriting OPAM settings from OPAM_PREFIX
    prefix="${OPAM_PREFIX}"
    ocamldir='${libdir}'
    metadir="${OPAM_PREFIX}/lib"
  else
    prefix="$(dirname ${OCAMLLIB})"
    base="$(basename ${prefix})"
    if test "x${base}" = "xlib"; then
      prefix="$(dirname ${prefix})"
    fi
  fi
fi

AC_ARG_WITH(ocamldir,
 [AS_HELP_STRING([--with-ocamldir=DIRNAME],
               [root storage of the OCaml distribution])],
 [ocamldir="${withval}"],
 [])

AC_ARG_WITH(metadir,
 [AS_HELP_STRING([--with-metadir=DIRNAME],
               [store meta files in DIRNAME])],
 [metadir="${withval}"],
 [])

AC_SUBST(ocamldir)
AC_SUBST(metadir)

AC_SUBST(CONFIGURE_ARGS)
AC_SUBST(OCAMLVERSION)
AC_SUBST(OCAMLLIB)
AC_SUBST(OCAMLOPT)
AC_SUBST(OCAMLDEP)
AC_SUBST(OCAMLBIN)
AC_PROG_FINDLIB
if test "$OCAMLFIND" = "no"; then
   AC_MSG_ERROR([You must install OCaml package 'ocamlfind'])
fi
AC_CHECK_OCAML_PKG(ocplib-endian)
if test "$OCAML_PKG_ocplib_endian" = "no"; then
   AC_MSG_ERROR([Please install OCaml package 'ocplib-endian'.])
fi
AC_CHECK_OCAML_PKG(ocp-build)
if test "$OCAML_PKG_ocp_build" = "no"; then
   AC_MSG_ERROR([Please install OCaml package 'ocp-build'.])
fi
AC_CHECK_OCAML_PKG([lwt])
AC_ARG_ENABLE(lwt,  [  --disable-lwt           to disable lwt],
                    [OCAML_PKG_lwt=no],[])
if test "$OCAML_PKG_lwt" = "no"; then
   lwt_ENABLED=false
else
   lwt_ENABLED=true
fi
AC_SUBST(lwt_ENABLED)
AC_CHECK_OCAML_PKG([async])
AC_ARG_ENABLE(lwt,  [  --disable-async           to disable async],
                    [OCAML_PKG_async=no],[])
if test "$OCAML_PKG_async" = "no"; then
   async_ENABLED=false
else
   async_ENABLED=true
fi
AC_SUBST(async_ENABLED)
if test "$OCAML_PKG_lwt" = "no"; then
  if test "$OCAML_PKG_async" = "no"; then
    AC_MSG_ERROR([Please install OCaml package 'lwt' or 'async'.])
  else
    CONCUR_TARGETS="async"
  fi
else
  if test "$OCAML_PKG_async" = "no"; then
    CONCUR_TARGETS="lwt"
  else
    CONCUR_TARGETS="lwt async"
  fi
fi

AC_SUBST(CONCUR_TARGETS)
AC_SUBST(OCAMLFIND)
AC_SUBST(CONFIGURE_ARGS)
AC_SUBST(prefix)
AC_SUBST(exec_prefix)
AC_SUBST(bindir)
AC_SUBST(libdir)
AC_SUBST(datarootdir)
AC_SUBST(mandir)
AC_SUBST(datadir)
AC_SUBST(ocamldir)
AC_SUBST(metadir)
AC_SUBST(OCAMLVERSION)
AC_SUBST(OCAMLC)
AC_SUBST(OCAMLOPT)
AC_SUBST(OCAMLDEP)
AC_SUBST(OCAMLMKTOP)
AC_SUBST(OCAMLMKLIB)
AC_SUBST(OCAMLDOC)
AC_SUBST(OCAMLLIB)
AC_SUBST(OCAMLBIN)
AC_SUBST(PACKAGE_NAME)
AC_SUBST(PACKAGE_VERSION)
AC_SUBST(CONCUR_TARGETS)
AC_CONFIG_FILES(Makefile.config config.ocpgen)
AC_OUTPUT
